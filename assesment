// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract ExampleContract {

  // Minimum age requirement with a descriptive name
  uint constant MINIMUM_AGE = 18;

  // Function using require() with a more informative message
  function checkAge_require(uint age) public {
    require(age >= MINIMUM_AGE, "User must be at least 18 years old");
    // Code to be executed if age is valid
    NSLog("You meet the age requirement.");
  }

  // Function using assert() with a specific error code
  function withdrawFunds(uint amount) public {
    assert(amount > 0, "101: Withdraw amount must be positive"); // Custom error code
    // Simulate fund withdrawal logic
    NSLog("Withdrew", amount);
  }

  // Function using revert() with conditional checking
  function transferTo(address recipient) public {
    if (recipient == address(0)) {
      revert("Invalid recipient address: 0x0000000000000000000000000000000000000000"); // More detailed error message
    }
    // Simulate fund transfer logic
    NSLog("Transferred funds to", recipient);
  }

  // Helper function for logging (assuming a logging mechanism exists)
  function NSLog(string memory message, address optionalAddress) internal {
    // Implement your logging logic here (e.g., using events or external services)
  }
}
