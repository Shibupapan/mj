// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract ExampleContract {

  // Minimum age requirement
  uint constant MINIMUM_AGE = 18;

  // Custom error types for better clarity
  error InvalidAge(uint providedAge);
  error InsufficientFunds(uint requestedAmount);
  error InvalidRecipient();

  // Function using require() with a custom error
  function checkAge_require(uint age) public {
    require(age >= MINIMUM_AGE, InvalidAge(age));
    NSLog("You meet the age requirement."); // Replace with actual logging
  }

  // Function using assert() for internal checks
  function withdrawFunds(uint amount) public {
    assert(amount > 0, InsufficientFunds(amount));
    NSLog("Withdrew", amount); // Replace with actual logging
  }

  // Function using revert() for critical errors
  function transferTo(address recipient) public {
    if (recipient == address(0)) {
      revert InvalidRecipient();
    }
    NSLog("Transferred funds to", recipient); // Replace with actual logging
  }

  // Helper function for logging (replace with your implementation)
  function NSLog(string memory message, address optionalAddress) internal pure {
    // Replace this with your actual logging mechanism (e.g., console.log)
  }
}
